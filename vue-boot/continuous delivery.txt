
# 운영 환경에 어플리케이션을 배포하는 방법

# 여기서는 도커 + 젠킨스 2를 통해 배포
# Dockerfile을 아래와 같이 작성한다

From openjdk:8-jre-alpine                                 # 자바 실행 환경 이미지를 가져온다
RUN apk add graphicsmagick=1.3.30-r0                      # 필요한 의존성 설치 / 이미지 썸네일 생성에 필요한 소프트 링크 생성
RUN ln -s /usr/bin/gm /usr/local/bin/gm
ADD app.jar /실행 파일.jar                                  # 실행 파일.jar를 도커 폴더에 app.jar라는 이름으로 복사한다
ADD application-docker.properties /설정 파일.properties
EXPOSE 8080 9000                                          # 포트 노출
ENTRYPOINT ["java", "-jar", "/실행 파일.jar"]               # 도커 컨테이너가 실행될 때, 이 명령어를 실행하여, 애플리케이션을 구동


# docker라는 폴더를 루트 폴더에 생성하고, Dockerfile , application-docker.properties , env.list , start.sh를 생성한다
# 그리고 Jenkinsfile을 생성하고, 소스코드에 커밋한다
# 서버 준비
# 아마존 EC2 인스턴스를 생성하고, EC2 인스턴스 (아마존 리눅스 환경) 에서 Mysql, RabbitMQ 등을 설치
# 젠킨스 설치 절차 진행
# 1. 젠킨스 다운로드 - 다운로드 디렉터리에서 터미널 열고 - [java -jar jenkins.war --httpPort=9090 실행] - localhost:9090으로 브라우저 접속 - 설치 절차 진행
# 2. 젠킨스 작업 생성 - 파이프라인 설정  



# 수동 배포
# 1. mvn clean install을 시작으로 FTP나 scp 명령어로 .jar 파일을 서버로 전송하여, 서버에서 .jar 파일을 실행한다
# 그리고 이전 버전의 애플리케이션을 중지하고, 새로운 버전을 시작하고, e2e 테스트를 실행하는 것까지 수동으로 할 수도 있다
# 2. 파이썬 / 셸 스크립트를 작성해서 몇가지 단계를 자동화할 수 있다

# 두 방법 모두 수동으로 작업할 부분이 존재하며 에러를 발생시킬 수 있다
# 이것이 수동 또는 반 수동으로 애플리케이션을 배포하는 것이 힘든 이유다 

# 배포 지원 툴
# 많은 툴이 깃과 같은 버전 관리 시스템과 깊게 통합 / 오픈 소스 / 무료

# Travis CI는 깃허브에 코드를 푸시하면, 애플리케이션을 빌드
# 빌드가 성공하면, 자동으로 지정된 서버에 애플리케이션을 배포하고, 슬랙이나 이메일을 통해 배포가 성공 / 실패 했음을 알린다

# 도커 + 젠킨스 2 

# 지속적 통합: 푸시/풀 - 빌드 - 단위 테스트 - 통합 테스트
# 지속적 전달: 푸시/풀 - 빌드 - 단위 테스트 - 통합 테스트 - 스테이징 배포 - E2E 테스트 - 운영 배포 (수동) - 스모크 테스트
# 지속적 배포: 푸시/풀 - 빌드 - 단위 테스트 - 통합 테스트 - 스테이징 배포 - E2E 테스트 - 운영 배포 - 스모크 테스트